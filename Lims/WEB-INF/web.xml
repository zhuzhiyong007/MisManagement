<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>MisManagement</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!--  listener > filter > servlet   -->

	 <jsp-config>
		<taglib>
		   <taglib-uri>ZXTag</taglib-uri>
		   <taglib-location>/WEB-INF/ZXTag.tld</taglib-location>
		</taglib>
	</jsp-config>

	<error-page>
	    <error-code>404</error-code>
	    <location>/error404.jsp</location>
	</error-page>

	<error-page>
	    <exception-type>java.lang.Exception</exception-type>
	    <location>/exception.jsp</location>
	</error-page>
	
	<error-page>  
	      <exception-type>java.lang.NullException</exception-type>  
	      <location>/error.jsp</location>  
	</error-page>
  <!-- 
	<filter>
	    <filter-name>XXXCharaSetFilter</filter-name>
	    <filter-class>net.test.CharSetFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>XXXCharaSetFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
  <filter-name>Encoding</filter-name>
  <filter-class>ghjf.test.filter.SetCharacterEncodingFilter</filter-class>
  <init-param>
     <param-name>encoding</param-name>
     <param-value>GBK</param-value>
  </init-param>
</filter>
<filter-mapping>
   <filter-name>Encoding</filter-name>
   <url-pattern>/*</url-pattern>
</filter-mapping>
   -->
	<session-config>
	     <session-timeout>2000</session-timeout>
	</session-config>


	<!-- 配置log4j配置文件的路径，可以是xml或 properties（此参数必须配）--> 
	<!--下面使用了classpath 参数指定log4j.properties文件的位置，这样log4j的配置文件就不用非要放到src的下面  -->
	<!-- <context-param>
	  	<param-name>log4jConfigLocation</param-name>
	 	<param-value>classpath:config/log4j/log4j.properties</param-value>
	</context-param> --> 
	<!-- 使用spring的监听器,当应用启动时来读取log4j的配置文件   --> 
	<!-- <listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<listener>
	  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener> -->

	

	<!-- <servlet>
		<servlet-name>dispather</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/classes/applicationContext.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispather</servlet-name>
		<url-pattern>/**</url-pattern>
	</servlet-mapping>
	
	<servlet>
	    <servlet-name>Login</servlet-name>
	    	<servlet-class>net.test.TestServlet</servlet-class>
	    <init-param>
	       <param-name>userName</param-name>
	       <param-value>Tommy</param-value>
	    </init-param>
	    <init-param>
	          <param-name>E-mail</param-name>
	          <param-value>Tommy@163.com</param-value>
	    </init-param>
	</servlet>
  
	  <servlet-mapping>
	    <servlet-name>servlet1</servlet-name>
	    <url-pattern>*.do</url-pattern>
		</servlet-mapping> -->
</web-app>